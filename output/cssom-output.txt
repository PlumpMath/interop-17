let module StyleSheet = {
  type t;
  external disabled: t => bool = "" [@@bs.send];
  external href: t => string = "" [@@bs.send];
  external media: t => MediaList = "" [@@bs.send];
  external ownerNode: t => Node = "" [@@bs.send];
  external parentStyleSheet: t => TODO = "" [@@bs.send];
  external title: t => string = "" [@@bs.send];
  external type: t => string = "" [@@bs.send];
};
let module StyleSheetList = {
  type t;
  external length: t => float = "" [@@bs.send];
};
let module MediaList = {
  type t;
  external mediaText: t => string = "" [@@bs.send];
  external length: t => float = "" [@@bs.send];
  external item: t => float => TODO = "" [@@bs.send];
  external deleteMedium: t => string => unit = "" [@@bs.send];
  external appendMedium: t => string => unit = "" [@@bs.send];
};
let module CSSStyleSheet = {
  type t;
  external cssRules: t => CSSRuleList = "" [@@bs.send];
  external ownerRule: t => TODO = "" [@@bs.send];
  external deleteRule: t => float => unit = "" [@@bs.send];
  external insertRule: t => string => float => unit = "" [@@bs.send];
};
let module CSSRule = {
  type t;
  external cssText: t => string = "" [@@bs.send];
  external parentRule: t => TODO = "" [@@bs.send];
  external parentStyleSheet: t => TODO = "" [@@bs.send];
  external type: t => float = "" [@@bs.send];
  external _STYLE_RULE: float = "" [@@bs.val];
  external _MEDIA_RULE: float = "" [@@bs.val];
  external _FONT_FACE_RULE: float = "" [@@bs.val];
  external _PAGE_RULE: float = "" [@@bs.val];
  external _IMPORT_RULE: float = "" [@@bs.val];
  external _CHARSET_RULE: float = "" [@@bs.val];
  external _UNKNOWN_RULE: float = "" [@@bs.val];
  external _KEYFRAMES_RULE: float = "" [@@bs.val];
  external _KEYFRAME_RULE: float = "" [@@bs.val];
  external _NAMESPACE_RULE: float = "" [@@bs.val];
  external _COUNTER_STYLE_RULE: float = "" [@@bs.val];
  external _SUPPORTS_RULE: float = "" [@@bs.val];
  external _DOCUMENT_RULE: float = "" [@@bs.val];
  external _FONT_FEATURE_VALUES_RULE: float = "" [@@bs.val];
  external _VIEWPORT_RULE: float = "" [@@bs.val];
  external _REGION_STYLE_RULE: float = "" [@@bs.val];
};
let module CSSRuleList = {
  type t;
  external length: t => float = "" [@@bs.send];
  external item: t => float => TODO = "" [@@bs.send];
};
let module CSSStyleDeclaration = {
  type t;
  external alignContent: t => string = "" [@@bs.send];
  external alignItems: t => string = "" [@@bs.send];
  external alignSelf: t => string = "" [@@bs.send];
  external all: t => string = "" [@@bs.send];
  external animation: t => string = "" [@@bs.send];
  external animationDelay: t => string = "" [@@bs.send];
  external animationDirection: t => string = "" [@@bs.send];
  external animationDuration: t => string = "" [@@bs.send];
  external animationFillMode: t => string = "" [@@bs.send];
  external animationIterationCount: t => string = "" [@@bs.send];
  external animationName: t => string = "" [@@bs.send];
  external animationPlayState: t => string = "" [@@bs.send];
  external animationTimingFunction: t => string = "" [@@bs.send];
  external backfaceVisibility: t => string = "" [@@bs.send];
  external background: t => string = "" [@@bs.send];
  external backgroundAttachment: t => string = "" [@@bs.send];
  external backgroundBlendMode: t => string = "" [@@bs.send];
  external backgroundClip: t => string = "" [@@bs.send];
  external backgroundColor: t => string = "" [@@bs.send];
  external backgroundImage: t => string = "" [@@bs.send];
  external backgroundOrigin: t => string = "" [@@bs.send];
  external backgroundPosition: t => string = "" [@@bs.send];
  external backgroundRepeat: t => string = "" [@@bs.send];
  external backgroundSize: t => string = "" [@@bs.send];
  external blockSize: t => string = "" [@@bs.send];
  external border: t => string = "" [@@bs.send];
  external borderBlockEnd: t => string = "" [@@bs.send];
  external borderBlockEndColor: t => string = "" [@@bs.send];
  external borderBlockEndStyle: t => string = "" [@@bs.send];
  external borderBlockEndWidth: t => string = "" [@@bs.send];
  external borderBlockStart: t => string = "" [@@bs.send];
  external borderBlockStartColor: t => string = "" [@@bs.send];
  external borderBlockStartStyle: t => string = "" [@@bs.send];
  external borderBlockStartWidth: t => string = "" [@@bs.send];
  external borderBottom: t => string = "" [@@bs.send];
  external borderBottomColor: t => string = "" [@@bs.send];
  external borderBottomLeftRadius: t => string = "" [@@bs.send];
  external borderBottomRightRadius: t => string = "" [@@bs.send];
  external borderBottomStyle: t => string = "" [@@bs.send];
  external borderBottomWidth: t => string = "" [@@bs.send];
  external borderCollapse: t => string = "" [@@bs.send];
  external borderColor: t => string = "" [@@bs.send];
  external borderImage: t => string = "" [@@bs.send];
  external borderImageOutset: t => string = "" [@@bs.send];
  external borderImageRepeat: t => string = "" [@@bs.send];
  external borderImageSlice: t => string = "" [@@bs.send];
  external borderImageSource: t => string = "" [@@bs.send];
  external borderImageWidth: t => string = "" [@@bs.send];
  external borderInlineEnd: t => string = "" [@@bs.send];
  external borderInlineEndColor: t => string = "" [@@bs.send];
  external borderInlineEndStyle: t => string = "" [@@bs.send];
  external borderInlineEndWidth: t => string = "" [@@bs.send];
  external borderInlineStart: t => string = "" [@@bs.send];
  external borderInlineStartColor: t => string = "" [@@bs.send];
  external borderInlineStartStyle: t => string = "" [@@bs.send];
  external borderInlineStartWidth: t => string = "" [@@bs.send];
  external borderLeft: t => string = "" [@@bs.send];
  external borderLeftColor: t => string = "" [@@bs.send];
  external borderLeftStyle: t => string = "" [@@bs.send];
  external borderLeftWidth: t => string = "" [@@bs.send];
  external borderRadius: t => string = "" [@@bs.send];
  external borderRight: t => string = "" [@@bs.send];
  external borderRightColor: t => string = "" [@@bs.send];
  external borderRightStyle: t => string = "" [@@bs.send];
  external borderRightWidth: t => string = "" [@@bs.send];
  external borderSpacing: t => string = "" [@@bs.send];
  external borderStyle: t => string = "" [@@bs.send];
  external borderTop: t => string = "" [@@bs.send];
  external borderTopColor: t => string = "" [@@bs.send];
  external borderTopLeftRadius: t => string = "" [@@bs.send];
  external borderTopRightRadius: t => string = "" [@@bs.send];
  external borderTopStyle: t => string = "" [@@bs.send];
  external borderTopWidth: t => string = "" [@@bs.send];
  external borderWidth: t => string = "" [@@bs.send];
  external bottom: t => string = "" [@@bs.send];
  external boxDecorationBreak: t => string = "" [@@bs.send];
  external boxShadow: t => string = "" [@@bs.send];
  external boxSizing: t => string = "" [@@bs.send];
  external breakAfter: t => string = "" [@@bs.send];
  external breakBefore: t => string = "" [@@bs.send];
  external breakInside: t => string = "" [@@bs.send];
  external captionSide: t => string = "" [@@bs.send];
  external clear: t => string = "" [@@bs.send];
  external clip: t => string = "" [@@bs.send];
  external clipPath: t => string = "" [@@bs.send];
  external color: t => string = "" [@@bs.send];
  external columns: t => string = "" [@@bs.send];
  external columnCount: t => string = "" [@@bs.send];
  external columnFill: t => string = "" [@@bs.send];
  external columnGap: t => string = "" [@@bs.send];
  external columnRule: t => string = "" [@@bs.send];
  external columnRuleColor: t => string = "" [@@bs.send];
  external columnRuleStyle: t => string = "" [@@bs.send];
  external columnRuleWidth: t => string = "" [@@bs.send];
  external columnSpan: t => string = "" [@@bs.send];
  external columnWidth: t => string = "" [@@bs.send];
  external content: t => string = "" [@@bs.send];
  external counterIncrement: t => string = "" [@@bs.send];
  external counterReset: t => string = "" [@@bs.send];
  external cursor: t => string = "" [@@bs.send];
  external direction: t => string = "" [@@bs.send];
  external display: t => string = "" [@@bs.send];
  external emptyCells: t => string = "" [@@bs.send];
  external filter: t => string = "" [@@bs.send];
  external flex: t => string = "" [@@bs.send];
  external flexBasis: t => string = "" [@@bs.send];
  external flexDirection: t => string = "" [@@bs.send];
  external flexFlow: t => string = "" [@@bs.send];
  external flexGrow: t => string = "" [@@bs.send];
  external flexShrink: t => string = "" [@@bs.send];
  external flexWrap: t => string = "" [@@bs.send];
  external float: t => string = "" [@@bs.send];
  external font: t => string = "" [@@bs.send];
  external fontFamily: t => string = "" [@@bs.send];
  external fontFeatureSettings: t => string = "" [@@bs.send];
  external fontKerning: t => string = "" [@@bs.send];
  external fontLanguageOverride: t => string = "" [@@bs.send];
  external fontSize: t => string = "" [@@bs.send];
  external fontSizeAdjust: t => string = "" [@@bs.send];
  external fontStretch: t => string = "" [@@bs.send];
  external fontStyle: t => string = "" [@@bs.send];
  external fontSynthesis: t => string = "" [@@bs.send];
  external fontVariant: t => string = "" [@@bs.send];
  external fontVariantAlternates: t => string = "" [@@bs.send];
  external fontVariantCaps: t => string = "" [@@bs.send];
  external fontVariantEastAsian: t => string = "" [@@bs.send];
  external fontVariantLigatures: t => string = "" [@@bs.send];
  external fontVariantNumeric: t => string = "" [@@bs.send];
  external fontVariantPosition: t => string = "" [@@bs.send];
  external fontWeight: t => string = "" [@@bs.send];
  external grad: t => string = "" [@@bs.send];
  external grid: t => string = "" [@@bs.send];
  external gridArea: t => string = "" [@@bs.send];
  external gridAutoColumns: t => string = "" [@@bs.send];
  external gridAutoFlow: t => string = "" [@@bs.send];
  external gridAutoPosition: t => string = "" [@@bs.send];
  external gridAutoRows: t => string = "" [@@bs.send];
  external gridColumn: t => string = "" [@@bs.send];
  external gridColumnStart: t => string = "" [@@bs.send];
  external gridColumnEnd: t => string = "" [@@bs.send];
  external gridRow: t => string = "" [@@bs.send];
  external gridRowStart: t => string = "" [@@bs.send];
  external gridRowEnd: t => string = "" [@@bs.send];
  external gridTemplate: t => string = "" [@@bs.send];
  external gridTemplateAreas: t => string = "" [@@bs.send];
  external gridTemplateRows: t => string = "" [@@bs.send];
  external gridTemplateColumns: t => string = "" [@@bs.send];
  external height: t => string = "" [@@bs.send];
  external hyphens: t => string = "" [@@bs.send];
  external imageRendering: t => string = "" [@@bs.send];
  external imageResolution: t => string = "" [@@bs.send];
  external imageOrientation: t => string = "" [@@bs.send];
  external imeMode: t => string = "" [@@bs.send];
  external inherit: t => string = "" [@@bs.send];
  external initial: t => string = "" [@@bs.send];
  external inlineSize: t => string = "" [@@bs.send];
  external isolation: t => string = "" [@@bs.send];
  external justifyContent: t => string = "" [@@bs.send];
  external left: t => string = "" [@@bs.send];
  external letterSpacing: t => string = "" [@@bs.send];
  external lineBreak: t => string = "" [@@bs.send];
  external lineHeight: t => string = "" [@@bs.send];
  external listStyle: t => string = "" [@@bs.send];
  external listStyleImage: t => string = "" [@@bs.send];
  external listStylePosition: t => string = "" [@@bs.send];
  external listStyleType: t => string = "" [@@bs.send];
  external margin: t => string = "" [@@bs.send];
  external marginBlockEnd: t => string = "" [@@bs.send];
  external marginBlockStart: t => string = "" [@@bs.send];
  external marginBottom: t => string = "" [@@bs.send];
  external marginInlineEnd: t => string = "" [@@bs.send];
  external marginInlineStart: t => string = "" [@@bs.send];
  external marginLeft: t => string = "" [@@bs.send];
  external marginRight: t => string = "" [@@bs.send];
  external marginTop: t => string = "" [@@bs.send];
  external marks: t => string = "" [@@bs.send];
  external mask: t => string = "" [@@bs.send];
  external maskType: t => string = "" [@@bs.send];
  external maxBlockSize: t => string = "" [@@bs.send];
  external maxHeight: t => string = "" [@@bs.send];
  external maxInlineSize: t => string = "" [@@bs.send];
  external maxWidth: t => string = "" [@@bs.send];
  external minBlockSize: t => string = "" [@@bs.send];
  external minHeight: t => string = "" [@@bs.send];
  external minInlineSize: t => string = "" [@@bs.send];
  external minWidth: t => string = "" [@@bs.send];
  external mixBlendMode: t => string = "" [@@bs.send];
  external objectFit: t => string = "" [@@bs.send];
  external objectPosition: t => string = "" [@@bs.send];
  external offsetBlockEnd: t => string = "" [@@bs.send];
  external offsetBlockStart: t => string = "" [@@bs.send];
  external offsetInlineEnd: t => string = "" [@@bs.send];
  external offsetInlineStart: t => string = "" [@@bs.send];
  external opacity: t => string = "" [@@bs.send];
  external order: t => string = "" [@@bs.send];
  external orphans: t => string = "" [@@bs.send];
  external outline: t => string = "" [@@bs.send];
  external outlineColor: t => string = "" [@@bs.send];
  external outlineOffset: t => string = "" [@@bs.send];
  external outlineStyle: t => string = "" [@@bs.send];
  external outlineWidth: t => string = "" [@@bs.send];
  external overflow: t => string = "" [@@bs.send];
  external overflowWrap: t => string = "" [@@bs.send];
  external overflowX: t => string = "" [@@bs.send];
  external overflowY: t => string = "" [@@bs.send];
  external padding: t => string = "" [@@bs.send];
  external paddingBlockEnd: t => string = "" [@@bs.send];
  external paddingBlockStart: t => string = "" [@@bs.send];
  external paddingBottom: t => string = "" [@@bs.send];
  external paddingInlineEnd: t => string = "" [@@bs.send];
  external paddingInlineStart: t => string = "" [@@bs.send];
  external paddingLeft: t => string = "" [@@bs.send];
  external paddingRight: t => string = "" [@@bs.send];
  external paddingTop: t => string = "" [@@bs.send];
  external pageBreakAfter: t => string = "" [@@bs.send];
  external pageBreakBefore: t => string = "" [@@bs.send];
  external pageBreakInside: t => string = "" [@@bs.send];
  external perspective: t => string = "" [@@bs.send];
  external perspectiveOrigin: t => string = "" [@@bs.send];
  external pointerEvents: t => string = "" [@@bs.send];
  external position: t => string = "" [@@bs.send];
  external quotes: t => string = "" [@@bs.send];
  external rad: t => string = "" [@@bs.send];
  external resize: t => string = "" [@@bs.send];
  external right: t => string = "" [@@bs.send];
  external rubyAlign: t => string = "" [@@bs.send];
  external rubyMerge: t => string = "" [@@bs.send];
  external rubyPosition: t => string = "" [@@bs.send];
  external scrollBehavior: t => string = "" [@@bs.send];
  external scrollSnapCoordinate: t => string = "" [@@bs.send];
  external scrollSnapDestination: t => string = "" [@@bs.send];
  external scrollSnapPointsX: t => string = "" [@@bs.send];
  external scrollSnapPointsY: t => string = "" [@@bs.send];
  external scrollSnapType: t => string = "" [@@bs.send];
  external shapeImageThreshold: t => string = "" [@@bs.send];
  external shapeMargin: t => string = "" [@@bs.send];
  external shapeOutside: t => string = "" [@@bs.send];
  external tableLayout: t => string = "" [@@bs.send];
  external tabSize: t => string = "" [@@bs.send];
  external textAlign: t => string = "" [@@bs.send];
  external textAlignLast: t => string = "" [@@bs.send];
  external textCombineUpright: t => string = "" [@@bs.send];
  external textDecoration: t => string = "" [@@bs.send];
  external textDecorationColor: t => string = "" [@@bs.send];
  external textDecorationLine: t => string = "" [@@bs.send];
  external textDecorationStyle: t => string = "" [@@bs.send];
  external textIndent: t => string = "" [@@bs.send];
  external textOrientation: t => string = "" [@@bs.send];
  external textOverflow: t => string = "" [@@bs.send];
  external textRendering: t => string = "" [@@bs.send];
  external textShadow: t => string = "" [@@bs.send];
  external textTransform: t => string = "" [@@bs.send];
  external textUnderlinePosition: t => string = "" [@@bs.send];
  external top: t => string = "" [@@bs.send];
  external touchAction: t => string = "" [@@bs.send];
  external transform: t => string = "" [@@bs.send];
  external transformOrigin: t => string = "" [@@bs.send];
  external transformStyle: t => string = "" [@@bs.send];
  external transition: t => string = "" [@@bs.send];
  external transitionDelay: t => string = "" [@@bs.send];
  external transitionDuration: t => string = "" [@@bs.send];
  external transitionProperty: t => string = "" [@@bs.send];
  external transitionTimingFunction: t => string = "" [@@bs.send];
  external turn: t => string = "" [@@bs.send];
  external unicodeBidi: t => string = "" [@@bs.send];
  external unicodeRange: t => string = "" [@@bs.send];
  external verticalAlign: t => string = "" [@@bs.send];
  external visibility: t => string = "" [@@bs.send];
  external webkitTransform: t => string = "" [@@bs.send];
  external whiteSpace: t => string = "" [@@bs.send];
  external widows: t => string = "" [@@bs.send];
  external width: t => string = "" [@@bs.send];
  external willChange: t => string = "" [@@bs.send];
  external wordBreak: t => string = "" [@@bs.send];
  external wordSpacing: t => string = "" [@@bs.send];
  external wordWrap: t => string = "" [@@bs.send];
  external writingMode: t => string = "" [@@bs.send];
  external zIndex: t => string = "" [@@bs.send];
  external cssFloat: t => string = "" [@@bs.send];
  external cssText: t => string = "" [@@bs.send];
  external getPropertyPriority: t => string => string = "" [@@bs.send];
  external getPropertyValue: t => string => string = "" [@@bs.send];
  external item: t => float => string = "" [@@bs.send];
  external length: t => float = "" [@@bs.send];
  external parentRule: t => CSSRule = "" [@@bs.send];
  external removeProperty: t => string => string = "" [@@bs.send];
  external setProperty: t => string => TODO => TODO => unit = "" [@@bs.send];
  external setPropertyPriority: t => string => string => unit = "" [@@bs.send];
};
let module TransitionEvent = {
  type t;
  external elapsedTime: t => float = "" [@@bs.send];
  external pseudoElement: t => string = "" [@@bs.send];
  external propertyName: t => string = "" [@@bs.send];
};
